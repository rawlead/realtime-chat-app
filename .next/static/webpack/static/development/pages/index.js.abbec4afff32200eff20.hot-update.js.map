{"version":3,"file":"static/webpack/static/development/pages/index.js.abbec4afff32200eff20.hot-update.js","sources":["webpack:///./components/Chat.js","webpack:///./components/ChatMessage.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/string/from-code-point.js","webpack:///./node_modules/core-js/library/fn/string/from-code-point.js","webpack:///./node_modules/core-js/library/modules/es6.string.from-code-point.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\n    import axios from 'axios';\n    import Pusher from 'pusher-js';\n\n    import ChatMessage from './ChatMessage';\n\n    const SAD_EMOJI = [55357, 56864];\n    const HAPPY_EMOJI = [55357, 56832];\n    const NEUTRAL_EMOJI = [55357, 56848];\n\n    class Chat extends Component {\n\n      state = { chats: [] }\n\n      componentDidMount() {\n\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n          cluster: process.env.PUSHER_APP_CLUSTER,\n          encrypted: true\n        });\n\n        this.channel = this.pusher.subscribe('chat-room');\n\n        this.channel.bind('new-message', ({ chat = null }) => {\n          const { chats } = this.state;\n          chat && chats.push(chat);\n          this.setState({ chats });\n        });\n\n        this.pusher.connection.bind('connected', () => {\n          axios.post('/messages')\n            .then(response => {\n              const chats = response.data.messages;\n              this.setState({ chats });\n            });\n        });\n\n      }\n\n      componentWillUnmount() {\n        this.pusher.disconnect();\n      }\n\n      handleKeyUp = evt => {\n        const value = evt.target.value;\n\n        if (evt.keyCode === 13 && !evt.shiftKey) {\n          const { activeUser: user } = this.props;\n          const chat = { user, message: value, timestamp: +new Date };\n\n          evt.target.value = '';\n          axios.post('/message', chat);\n        }\n      }\n\n      render() {\n        return (this.props.activeUser && <Fragment>\n\n          <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height: 90 }}>\n            <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\n          </div>\n\n          <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(100% - 180px)', overflowY: 'scroll' }}>\n\n             {this.state.chats.map((chat, index) => {\n\n               const previous = Math.max(0, index - 1);\n               const previousChat = this.state.chats[previous];\n               const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\n\n               const isFirst = previous === index;\n               const inSequence = chat.user === previousChat.user;\n               const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\n\n               const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\n\n               return (\n                 <Fragment key={index}>\n\n                   { (isFirst || !inSequence || hasDelay) && (\n                     <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '0.9rem' }}>\n                       <span className=\"d-block\" style={{ fontSize: '1.6rem' }}>\n                         {String.fromCodePoint(...mood)}\n                       </span>\n                       <span>{chat.user || 'Anonymous'}</span>\n                     </div>\n                   ) }\n\n                   <ChatMessage message={chat.message} position={position} />\n\n                 </Fragment>\n               );\n\n             })}\n\n          </div>\n\n          <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\n            <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\n          </div>\n\n        </Fragment> )\n      }\n\n    }\n\n    export default Chat;\n","import React, { Component } from 'react';\n\n   class ChatMessage extends Component {\n\n     render() {\n       const { position = 'left', message } = this.props;\n       const isRight = position.toLowerCase() === 'right';\n\n       const align = isRight ? 'text-right' : 'text-left';\n       const justify = isRight ? 'justify-content-end' : 'justify-content-start';\n\n       const messageBoxStyles = {\n         maxWidth: '70%',\n         flexGrow: 0\n       };\n\n       const messageStyles = {\n         fontWeight: 500,\n         lineHeight: 1.4,\n         whiteSpace: 'pre-wrap'\n       };\n\n       return <div className={`w-100 my-1 d-flex ${justify}`}>\n         <div className=\"bg-light rounded border border-gray p-2\" style={messageBoxStyles}>\n           <span className={`d-block text-secondary ${align}`} style={messageStyles}>\n             {message}\n           </span>\n         </div>\n       </div>\n     }\n\n   }\n\n   export default ChatMessage;\n","module.exports = require(\"core-js/library/fn/string/from-code-point\");","require('../../modules/es6.string.from-code-point');\nmodule.exports = require('../../modules/_core').String.fromCodePoint;\n","var $export = require('./_export');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar fromCharCode = String.fromCharCode;\nvar $fromCodePoint = String.fromCodePoint;\n\n// length should be 1, old FF problem\n$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {\n  // 21.1.2.2 String.fromCodePoint(...codePoints)\n  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars\n    var res = [];\n    var aLen = arguments.length;\n    var i = 0;\n    var code;\n    while (aLen > i) {\n      code = +arguments[i++];\n      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');\n      res.push(code < 0x10000\n        ? fromCharCode(code)\n        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)\n      );\n    } return res.join('');\n  }\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AACA;AA8BA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAxCA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;;;AAcA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAKA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA5FA;AACA;AA+FA;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;;;;AA3BA;AACA;AA8BA;;;;;;;;;;;ACjCA;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}